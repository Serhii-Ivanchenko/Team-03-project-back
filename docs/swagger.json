{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water Tracker APP",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "API for tracking the amount of water consumed by users. It allows adding, updating, and retrieving water intake data."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "http://localhost:8080"
    },
    {
      "url": "https://watertracker-app-spy2.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "User operations."
    },
    {
      "name": "Water",
      "description": "Operations about water."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register User",
        "operationId": "registerUser",
        "description": "Register user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/request-body"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/register.201"
          },
          "409": {
            "$ref": "#/components/responses/register.409"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "operationId": "loginUser",
        "description": "Logs in a user and returns an access token. Refresh token is set in cookies.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/request-body"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/login.200"
          },
          "401": {
            "$ref": "#/components/responses/login.401"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "operationId": "refreshUserSession",
        "description": "Refreshes the user session and returns a new access token. Refresh token must be provided in cookies.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/refresh.200"
          },
          "401": {
            "$ref": "#/components/responses/refresh.401"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "operationId": "logoutUser",
        "description": "Logs out a user by clearing the session and refresh token from cookies.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logout the user"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/auth/google/get-oauth-url": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get Google OAuth URL",
        "operationId": "getGoogleOAuthUrl",
        "description": "Generates and retrieves the Google OAuth URL for user authentication",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved Google OAuth URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get Google OAuth url!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://accounts.google.com/o/oauth2/auth?..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/google/confirm-google-auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Login with Google OAuth",
        "operationId": "loginWithGoogle",
        "description": "Logs in or signs up a user using Google OAuth and sets up session cookies",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code"
                ],
                "properties": {
                  "code": {
                    "description": "The authorization code received from Google OAuth",
                    "type": "string",
                    "example": "4/0AY0e-g6mE-8V6g2-2hNl_Ua1ycnQ5gJk4L8U3sfz5UEC-Mj3mKpTA"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in via Google OAuth",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in via Google OAuth!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "wUIm5H+xiqFPFhIqwPQZeMMXcVAuQXb7zJjzIjrE"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "Not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/data": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Retrieve User Data",
        "operationId": "getUserData",
        "description": "Retrieves the parameters of a registered user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Response containing user data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User data retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/users/photo": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Photo",
        "operationId": "patchUserPhoto",
        "description": "Updates the profile photo of the authenticated user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "photo"
                ],
                "properties": {
                  "photo": {
                    "description": "New profile photo to upload",
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated user photo",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated user photo!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "photo": {
                          "type": "string",
                          "example": "https://res.cloudinary.com/dcftarozu/image/upload/v1726336739/nyngek38xghmbjksx4i1.png"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "No file uploaded",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 400
                    },
                    "message": {
                      "type": "string",
                      "example": "No file uploaded"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/users/send-reset-email": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Send password reset email",
        "operationId": "sendResetEmail",
        "description": "Send a password reset email to the specified user.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "description": "Email address of the user requesting the password reset.",
                    "type": "string",
                    "example": "admin@gmail.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset email has been successfully sent.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent."
                    },
                    "data": {
                      "type": "object",
                      "example": {},
                      "description": "Empty object to confirm the operation."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-userNotFound"
          }
        }
      }
    },
    "/users/reset-pswrd": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Reset password",
        "operationId": "resetPassword",
        "description": "Reset the user password using a provided JWT token and new password.",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "password",
                  "token"
                ],
                "properties": {
                  "password": {
                    "description": "New password for the user.",
                    "type": "string",
                    "example": "password"
                  },
                  "token": {
                    "description": "JWT token used for password reset.",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2Y2UxOWMzZWUzMTg1ODNlMDQ1NTc0MSIsImVtYWlsIjoiZ29yZWxraW4uZWxlY3Ryb0BnbWFpbC5jb20iLCJpYXQiOjE3MjU1NzQwMzIsImV4cCI6MTcyNTU3NDMzMn0.KqPSB0Z0zvODGLOrQXNaPE14j97vysR9KsNdYAjveB0"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been successfully reset.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset."
                    },
                    "data": {
                      "type": "object",
                      "description": "Empty object to confirm the operation.",
                      "example": {}
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Token is expired or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 401
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is expired or invalid."
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404-userNotFound"
          }
        }
      }
    },
    "/users/update": {
      "patch": {
        "tags": [
          "Users"
        ],
        "summary": "Update User Data",
        "operationId": "updateUsers",
        "description": "Update user profile information, such as name, gender, weight, activity time, or daily water intake",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The user's name",
                    "type": "string",
                    "example": "Max Payne"
                  },
                  "gender": {
                    "description": "The user's gender",
                    "type": "string",
                    "enum": [
                      "woman",
                      "man"
                    ],
                    "example": "man"
                  },
                  "weight": {
                    "description": "The user's weight in kilograms",
                    "type": "number",
                    "example": 85
                  },
                  "activeTime": {
                    "description": "Time spent on physical activity in hours",
                    "type": "number",
                    "example": 6
                  },
                  "dailyNorm": {
                    "description": "The user's daily water intake in milliliters",
                    "type": "number",
                    "example": 1500
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User data updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated user data!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404-userNotFound"
          },
          "409": {
            "description": "Email in use",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 404
                    },
                    "message": {
                      "type": "string",
                      "example": "This email is already in use and cannot be changed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add Water item",
        "operationId": "addWaterItem",
        "description": "Create a new water item",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/water-item.req.body"
        },
        "responses": {
          "201": {
            "$ref": "#/components/responses/water-item.post.201"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update Water Item",
        "operationId": "patchWaterItem",
        "description": "Update Water Item",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/water-item.req.body"
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/water-item.patch.200"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete Water Item",
        "operationId": "deleteWaterItem",
        "description": "Delete",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully deleted the water item"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/water-item.delete.404"
          }
        }
      }
    },
    "/water/day/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Retrieve Day Water Items by specific date",
        "operationId": "getWaterDayByDate",
        "description": "Retrieve Day Water Items by specific date of a registered user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-09-09"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/water-item.day.200"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/water/month/{month}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Retrieve Month Water Items by specific month date",
        "operationId": "getWaterMonthByDate",
        "description": "Retrieve Month Water Items by specific month date of a registered user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "month",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-09-09",
              "description": "full format:[yyyy-MM-dd] - \"2024-09-09\" or short format:[yyyy-MM] - \"2024-09\""
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/water-item.month.200"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "requestBodies": {
      "request-body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "email",
                "password"
              ],
              "properties": {
                "email": {
                  "type": "string",
                  "format": "email",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "format": "password",
                  "example": "Password123!"
                }
              }
            }
          }
        }
      },
      "water-item.req.body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "value"
              ],
              "properties": {
                "value": {
                  "description": "Value",
                  "type": "string",
                  "example": "250"
                },
                "time": {
                  "description": "Time",
                  "type": "string",
                  "example": "22:22",
                  "default": null
                },
                "date": {
                  "description": "Date",
                  "type": "string",
                  "example": "2024-09-09",
                  "default": null
                }
              }
            }
          }
        }
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "_id",
          "name",
          "email",
          "password",
          "gender",
          "photo",
          "weight",
          "activeTime",
          "dailyNorm"
        ],
        "properties": {
          "_id": {
            "description": "Backend-generated unique identifier.",
            "type": "string",
            "example": "66d7503af64e3c25c739120f"
          },
          "name": {
            "description": "User name",
            "type": "string",
            "example": "John Wick",
            "default": null
          },
          "email": {
            "description": "User email address",
            "type": "string",
            "example": "BabaYaga@gmail.com"
          },
          "password": {
            "description": "User password",
            "type": "string",
            "example": "password"
          },
          "gender": {
            "description": "User gender",
            "type": "string",
            "enum": [
              "woman",
              "man"
            ],
            "example": "man",
            "default": "woman"
          },
          "photo": {
            "description": "URL to the user profile photo",
            "type": "string",
            "example": "https://res.cloudinary.com/da1ye1zxl/image/upload/v1725386810/bculv62l8qumzswpbkgz.jpg",
            "default": null
          },
          "weight": {
            "description": "User weight in kilograms",
            "type": "number",
            "example": 80,
            "default": 0
          },
          "activeTime": {
            "description": "User active time in hours per day",
            "type": "number",
            "example": 24,
            "default": 0
          },
          "dailyNorm": {
            "description": "Daily water intake in milliliters",
            "type": "number",
            "example": 2500,
            "default": 1700
          }
        }
      },
      "water-item": {
        "type": "object",
        "required": [
          "_id",
          "userId",
          "date",
          "time",
          "value"
        ],
        "properties": {
          "_id": {
            "description": "Backend-generated unique identifier.",
            "type": "string",
            "example": "66e2e3423073bfb71be21f81"
          },
          "userId": {
            "description": "userId",
            "type": "string",
            "example": "66e2e3423073bfb71be21f81"
          },
          "date": {
            "description": "Date",
            "type": "string",
            "format": "date",
            "example": "2024-09-09"
          },
          "time": {
            "description": "Time",
            "type": "string",
            "format": "time",
            "example": "22:22"
          },
          "value": {
            "description": "Value",
            "type": "integer",
            "example": 250
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal server error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "Something went wrong"
                },
                "data": {
                  "type": "string",
                  "example": "Error details or message from the server"
                }
              }
            }
          }
        }
      },
      "register.201": {
        "description": "Created",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Successfully registered a user!"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "accessToken",
                    "user"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "L8vTDBjLL79ntZi3hgb76FlR5lCy/4aEZPsic+u1"
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "register.409": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email in use"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "login.200": {
        "description": "OK",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully logged in an user!"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "accessToken",
                    "user"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "L8vTDBjLL79ntZi3hgb76FlR5lCy/4aEZPsic+u1"
                    },
                    "user": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "login.401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unauthorized"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "refresh.200": {
        "description": "Refresh session",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully refreshed a session!"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "accessToken"
                  ],
                  "properties": {
                    "accessToken": {
                      "type": "string",
                      "example": "vk3kIczmM27VurTViXbGCQvpu97eH8f7BAIwp1qA"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "refresh.401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404-userNotFound": {
        "description": "User not found!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found!"
                }
              }
            }
          }
        }
      },
      "water-item.post.201": {
        "description": "Creates a new water item",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 201
                },
                "message": {
                  "type": "string",
                  "example": "Successfully created a wateritem!"
                },
                "data": {
                  "type": "object",
                  "$ref": "#/components/schemas/water-item"
                }
              }
            }
          }
        }
      },
      "water-item.delete.404": {
        "description": "Water item not found!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "WaterItem by id:[65ca67e7ae7f10c88b598384] not exists"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "water-item.patch.200": {
        "description": "Successfully updated a water item!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 200
                },
                "message": {
                  "type": "string",
                  "example": "Successfully updated a waterItem!"
                },
                "data": {
                  "type": "object",
                  "$ref": "#/components/schemas/water-item"
                }
              }
            }
          }
        }
      },
      "water-item.day.200": {
        "description": "Successfully found data about day water consumption!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "date",
                "userId",
                "dailyNorm",
                "totalValue",
                "data"
              ],
              "properties": {
                "date": {
                  "type": "string",
                  "format": "date",
                  "example": "2024-09-09"
                },
                "userId": {
                  "type": "string",
                  "example": "66e2e3423073bfb71be21f81"
                },
                "dailyNorm": {
                  "type": "integer",
                  "description": "The daily target value or norm that the user aims to achieve.",
                  "example": 1700
                },
                "totalValue": {
                  "type": "integer",
                  "description": "The total value accumulated over the data period.",
                  "example": 815
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "id",
                      "time",
                      "value"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "example": "66e33067ec54bcf268b5f78f"
                      },
                      "time": {
                        "type": "string",
                        "format": "time",
                        "example": "21:18"
                      },
                      "value": {
                        "type": "integer",
                        "example": 555
                      }
                    }
                  }
                }
              },
              "example": {
                "date": "2024-09-01",
                "userId": "66e2e3423073bfb71be21f81",
                "dailyNorm": 1700,
                "totalValue": 815,
                "data": [
                  {
                    "id": "66e33067ec54bcf268b5f78f",
                    "time": "21:18",
                    "value": 555
                  },
                  {
                    "id": "66e4079d1c4eb0e98f4ffe82",
                    "time": "12:36",
                    "value": 130
                  },
                  {
                    "id": "66e723e1529bb9cc3866acfe",
                    "time": "21:13",
                    "value": 130
                  }
                ]
              }
            }
          }
        }
      },
      "water-item.month.200": {
        "description": "Successfully found data about month water consumption!",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "userId",
                "dailyNorm",
                "data"
              ],
              "properties": {
                "userId": {
                  "type": "string",
                  "example": "66e2e3423073bfb71be21f81"
                },
                "dailyNorm": {
                  "type": "integer",
                  "example": 1700
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "required": [
                      "date",
                      "value"
                    ],
                    "properties": {
                      "date": {
                        "type": "string",
                        "format": "date",
                        "example": "2024-09-01"
                      },
                      "value": {
                        "type": "integer",
                        "example": 815
                      }
                    }
                  }
                }
              },
              "example": {
                "userId": "66e2e3423073bfb71be21f81",
                "dailyNorm": 1700,
                "data": [
                  {
                    "date": "2024-09-01",
                    "value": 815
                  },
                  {
                    "date": "2024-09-02",
                    "value": 0
                  },
                  {
                    "date": "2024-09-03",
                    "value": 0
                  },
                  {
                    "date": "2024-09-04",
                    "value": 0
                  },
                  {
                    "date": "2024-09-05",
                    "value": 0
                  },
                  {
                    "date": "2024-09-06",
                    "value": 0
                  },
                  {
                    "date": "2024-09-07",
                    "value": 0
                  },
                  {
                    "date": "2024-09-08",
                    "value": 0
                  },
                  {
                    "date": "2024-09-09",
                    "value": 0
                  },
                  {
                    "date": "2024-09-10",
                    "value": 0
                  },
                  {
                    "date": "2024-09-11",
                    "value": 555
                  },
                  {
                    "date": "2024-09-12",
                    "value": 2553
                  },
                  {
                    "date": "2024-09-13",
                    "value": 260
                  },
                  {
                    "date": "2024-09-14",
                    "value": 0
                  },
                  {
                    "date": "2024-09-15",
                    "value": 0
                  },
                  {
                    "date": "2024-09-16",
                    "value": 0
                  },
                  {
                    "date": "2024-09-17",
                    "value": 0
                  },
                  {
                    "date": "2024-09-18",
                    "value": 0
                  },
                  {
                    "date": "2024-09-19",
                    "value": 0
                  },
                  {
                    "date": "2024-09-20",
                    "value": 0
                  },
                  {
                    "date": "2024-09-21",
                    "value": 0
                  },
                  {
                    "date": "2024-09-22",
                    "value": 0
                  },
                  {
                    "date": "2024-09-23",
                    "value": 0
                  },
                  {
                    "date": "2024-09-24",
                    "value": 0
                  },
                  {
                    "date": "2024-09-25",
                    "value": 0
                  },
                  {
                    "date": "2024-09-26",
                    "value": 0
                  },
                  {
                    "date": "2024-09-27",
                    "value": 0
                  },
                  {
                    "date": "2024-09-28",
                    "value": 0
                  },
                  {
                    "date": "2024-09-29",
                    "value": 0
                  },
                  {
                    "date": "2024-09-30",
                    "value": 0
                  }
                ]
              }
            }
          }
        }
      }
    }
  }
}