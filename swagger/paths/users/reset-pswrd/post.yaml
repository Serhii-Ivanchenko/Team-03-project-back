tags:
  - Users
summary: Reset password
operationId: resetPassword
description: 'Reset the user password using a provided JWT token and new password.'
security: []
requestBody:
  content:
    application/json:
      schema:
        type: object
        required:
          - password
          - token
        properties:
          password:
            description: 'New password for the user.'
            type: string
            example: 'password'
          token:
            description: 'JWT token used for password reset.'
            type: string
            example: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY2Y2UxOWMzZWUzMTg1ODNlMDQ1NTc0MSIsImVtYWlsIjoiZ29yZWxraW4uZWxlY3Ryb0BnbWFpbC5jb20iLCJpYXQiOjE3MjU1NzQwMzIsImV4cCI6MTcyNTU3NDMzMn0.KqPSB0Z0zvODGLOrQXNaPE14j97vysR9KsNdYAjveB0'
responses:
  '200':
    description: 'Password has been successfully reset.'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
            - data
          properties:
            status:
              type: integer
              example: 200
            message:
              type: string
              example: 'Password has been successfully reset.'
            data:
              type: object
              description: 'Empty object to confirm the operation.'
              example: {}
  # '400': ошибка валидации боди
  '401':
    description: 'Token is expired or invalid.'
    content:
      application/json:
        schema:
          type: object
          required:
            - status
            - message
          properties:
            status:
              type: integer
              example: 401
            message:
              type: string
              example: 'Token is expired or invalid.'
  '404':
    $ref: ../../../components/responses/404-userNotFound.yaml
